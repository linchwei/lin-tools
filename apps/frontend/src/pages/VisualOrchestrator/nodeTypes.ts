// ËäÇÁÇπÁ±ªÂûãÂÆö‰πâ

export interface FlowNode {
  id: string
  type: string
  name: string
  description: string
  x: number
  y: number
  config: Record<string, any>
  hasError?: boolean
}

export interface Connection {
  id: string
  sourceNodeId: string
  sourcePortId: string
  targetNodeId: string
  targetPortId: string
  type?: 'data' | 'control' | 'condition'
  condition?: string
  hasError?: boolean
}

export interface NodePort {
  id: string
  name: string
  type: 'input' | 'output'
  dataType: string
  required?: boolean
}

export interface ConfigItem {
  key: string
  label: string
  type: 'text' | 'number' | 'select' | 'boolean' | 'code' | 'textarea'
  placeholder?: string
  options?: Array<{ label: string; value: any }>
  min?: number
  max?: number
  default?: any
}

export interface NodeType {
  type: string
  name: string
  description: string
  icon: string
  color: string
  inputs: NodePort[]
  outputs: NodePort[]
  configSchema: ConfigItem[]
  category: string
}

export interface NodeCategory {
  name: string
  title: string
  nodes: NodeType[]
}

// Âü∫Á°ÄËäÇÁÇπÁ±ªÂûã
export const nodeTypes: NodeCategory[] = [
  {
    name: 'basic',
    title: 'üîß Âü∫Á°ÄËäÇÁÇπ',
    nodes: [
      {
        type: 'start',
        name: 'ÂºÄÂßã',
        description: 'ÊµÅÁ®ãÂºÄÂßãËäÇÁÇπ',
        icon: 'fas fa-play',
        color: '#67c23a',
        inputs: [],
        outputs: [
          { id: 'output', name: 'ËæìÂá∫', type: 'output', dataType: 'any' }
        ],
        configSchema: [
          {
            key: 'message',
            label: 'ÂêØÂä®Ê∂àÊÅØ',
            type: 'text',
            placeholder: 'ËØ∑ËæìÂÖ•ÂêØÂä®Ê∂àÊÅØ',
            default: 'ÊµÅÁ®ãÂºÄÂßã'
          }
        ],
        category: 'basic'
      },
      {
        type: 'end',
        name: 'ÁªìÊùü',
        description: 'ÊµÅÁ®ãÁªìÊùüËäÇÁÇπ',
        icon: 'fas fa-stop',
        color: '#f56c6c',
        inputs: [
          { id: 'input', name: 'ËæìÂÖ•', type: 'input', dataType: 'any' }
        ],
        outputs: [],
        configSchema: [
          {
            key: 'message',
            label: 'ÁªìÊùüÊ∂àÊÅØ',
            type: 'text',
            placeholder: 'ËØ∑ËæìÂÖ•ÁªìÊùüÊ∂àÊÅØ',
            default: 'ÊµÅÁ®ãÁªìÊùü'
          }
        ],
        category: 'basic'
      },
      {
        type: 'variable',
        name: 'ÂèòÈáè',
        description: 'ÂÆö‰πâÂíåÂ≠òÂÇ®ÂèòÈáè',
        icon: 'fas fa-cube',
        color: '#409eff',
        inputs: [
          { id: 'value', name: 'ÂÄº', type: 'input', dataType: 'any' }
        ],
        outputs: [
          { id: 'output', name: 'ËæìÂá∫', type: 'output', dataType: 'any' }
        ],
        configSchema: [
          {
            key: 'name',
            label: 'ÂèòÈáèÂêç',
            type: 'text',
            placeholder: 'ËØ∑ËæìÂÖ•ÂèòÈáèÂêç',
            default: 'variable1'
          },
          {
            key: 'type',
            label: 'Êï∞ÊçÆÁ±ªÂûã',
            type: 'select',
            options: [
              { label: 'Â≠óÁ¨¶‰∏≤', value: 'string' },
              { label: 'Êï∞Â≠ó', value: 'number' },
              { label: 'Â∏ÉÂ∞îÂÄº', value: 'boolean' },
              { label: 'ÂØπË±°', value: 'object' },
              { label: 'Êï∞ÁªÑ', value: 'array' }
            ],
            default: 'string'
          },
          {
            key: 'defaultValue',
            label: 'ÈªòËÆ§ÂÄº',
            type: 'text',
            placeholder: 'ËØ∑ËæìÂÖ•ÈªòËÆ§ÂÄº'
          }
        ],
        category: 'basic'
      },
      {
        type: 'log',
        name: 'Êó•ÂøóËæìÂá∫',
        description: 'ËæìÂá∫Êó•Âøó‰ø°ÊÅØ',
        icon: 'fas fa-file-alt',
        color: '#909399',
        inputs: [
          { id: 'message', name: 'Ê∂àÊÅØ', type: 'input', dataType: 'string' }
        ],
        outputs: [
          { id: 'output', name: 'ËæìÂá∫', type: 'output', dataType: 'string' }
        ],
        configSchema: [
          {
            key: 'level',
            label: 'Êó•ÂøóÁ∫ßÂà´',
            type: 'select',
            options: [
              { label: '‰ø°ÊÅØ', value: 'info' },
              { label: 'Ë≠¶Âëä', value: 'warn' },
              { label: 'ÈîôËØØ', value: 'error' },
              { label: 'Ë∞ÉËØï', value: 'debug' }
            ],
            default: 'info'
          },
          {
            key: 'prefix',
            label: 'ÂâçÁºÄ',
            type: 'text',
            placeholder: 'Êó•ÂøóÂâçÁºÄ',
            default: '[LOG]'
          }
        ],
        category: 'basic'
      }
    ]
  },
  {
    name: 'logic',
    title: 'üß† ÈÄªËæëÊéßÂà∂',
    nodes: [
      {
        type: 'condition',
        name: 'Êù°‰ª∂Âà§Êñ≠',
        description: 'Ê†πÊçÆÊù°‰ª∂ËøõË°åÂàÜÊîØÊéßÂà∂',
        icon: 'fas fa-code-branch',
        color: '#e6a23c',
        inputs: [
          { id: 'input', name: 'ËæìÂÖ•', type: 'input', dataType: 'any' }
        ],
        outputs: [
          { id: 'true', name: 'Áúü', type: 'output', dataType: 'any' },
          { id: 'false', name: 'ÂÅá', type: 'output', dataType: 'any' }
        ],
        configSchema: [
          {
            key: 'condition',
            label: 'Êù°‰ª∂Ë°®ËææÂºè',
            type: 'code',
            placeholder: '‰æãÂ¶Ç: value > 10',
            default: 'input > 0'
          },
          {
            key: 'operator',
            label: 'ÊØîËæÉÊìç‰ΩúÁ¨¶',
            type: 'select',
            options: [
              { label: 'Á≠â‰∫é (==)', value: '==' },
              { label: '‰∏çÁ≠â‰∫é (!=)', value: '!=' },
              { label: 'Â§ß‰∫é (>)', value: '>' },
              { label: 'Â∞è‰∫é (<)', value: '<' },
              { label: 'Â§ß‰∫éÁ≠â‰∫é (>=)', value: '>=' },
              { label: 'Â∞è‰∫éÁ≠â‰∫é (<=)', value: '<=' }
            ],
            default: '>'
          }
        ],
        category: 'logic'
      },
      {
        type: 'loop',
        name: 'Âæ™ÁéØ',
        description: 'Âæ™ÁéØÊâßË°åËäÇÁÇπ',
        icon: 'fas fa-redo',
        color: '#722ed1',
        inputs: [
          { id: 'input', name: 'ËæìÂÖ•', type: 'input', dataType: 'any' },
          { id: 'condition', name: 'Êù°‰ª∂', type: 'input', dataType: 'boolean' }
        ],
        outputs: [
          { id: 'body', name: 'Âæ™ÁéØ‰Ωì', type: 'output', dataType: 'any' },
          { id: 'output', name: 'ËæìÂá∫', type: 'output', dataType: 'any' }
        ],
        configSchema: [
          {
            key: 'type',
            label: 'Âæ™ÁéØÁ±ªÂûã',
            type: 'select',
            options: [
              { label: 'forÂæ™ÁéØ', value: 'for' },
              { label: 'whileÂæ™ÁéØ', value: 'while' },
              { label: 'forEachÂæ™ÁéØ', value: 'forEach' }
            ],
            default: 'for'
          },
          {
            key: 'maxIterations',
            label: 'ÊúÄÂ§ßËø≠‰ª£Ê¨°Êï∞',
            type: 'number',
            min: 1,
            max: 10000,
            default: 100
          }
        ],
        category: 'logic'
      },
      {
        type: 'switch',
        name: 'Â§öË∑ØÂàÜÊîØ',
        description: 'Â§öÊù°‰ª∂ÂàÜÊîØÊéßÂà∂',
        icon: 'fas fa-sitemap',
        color: '#13c2c2',
        inputs: [
          { id: 'input', name: 'ËæìÂÖ•', type: 'input', dataType: 'any' }
        ],
        outputs: [
          { id: 'case1', name: 'ÂàÜÊîØ1', type: 'output', dataType: 'any' },
          { id: 'case2', name: 'ÂàÜÊîØ2', type: 'output', dataType: 'any' },
          { id: 'case3', name: 'ÂàÜÊîØ3', type: 'output', dataType: 'any' },
          { id: 'default', name: 'ÈªòËÆ§', type: 'output', dataType: 'any' }
        ],
        configSchema: [
          {
            key: 'cases',
            label: 'ÂàÜÊîØÊù°‰ª∂',
            type: 'textarea',
            placeholder: 'ÊØèË°å‰∏Ä‰∏™Êù°‰ª∂Ôºå‰æãÂ¶Ç:\ncase1: value === "A"\ncase2: value === "B"',
            default: 'case1: value === "A"\ncase2: value === "B"\ncase3: value === "C"'
          }
        ],
        category: 'logic'
      }
    ]
  },
  {
    name: 'data',
    title: 'üìä Êï∞ÊçÆÂ§ÑÁêÜ',
    nodes: [
      {
        type: 'transform',
        name: 'Êï∞ÊçÆËΩ¨Êç¢',
        description: 'ËΩ¨Êç¢Êï∞ÊçÆÊ†ºÂºè',
        icon: 'fas fa-exchange-alt',
        color: '#52c41a',
        inputs: [
          { id: 'input', name: 'ËæìÂÖ•', type: 'input', dataType: 'any' }
        ],
        outputs: [
          { id: 'output', name: 'ËæìÂá∫', type: 'output', dataType: 'any' }
        ],
        configSchema: [
          {
            key: 'transformType',
            label: 'ËΩ¨Êç¢Á±ªÂûã',
            type: 'select',
            options: [
              { label: 'JSONËß£Êûê', value: 'parseJSON' },
              { label: 'JSONÂ≠óÁ¨¶‰∏≤Âåñ', value: 'stringifyJSON' },
              { label: 'Â≠óÁ¨¶‰∏≤ËΩ¨Êï∞Â≠ó', value: 'toNumber' },
              { label: 'Êï∞Â≠óËΩ¨Â≠óÁ¨¶‰∏≤', value: 'toString' },
              { label: 'Ëá™ÂÆö‰πâËΩ¨Êç¢', value: 'custom' }
            ],
            default: 'parseJSON'
          },
          {
            key: 'customCode',
            label: 'Ëá™ÂÆö‰πâËΩ¨Êç¢‰ª£Á†Å',
            type: 'code',
            placeholder: '// ËøîÂõûËΩ¨Êç¢ÂêéÁöÑÊï∞ÊçÆ\nreturn input.toUpperCase();'
          }
        ],
        category: 'data'
      },
      {
        type: 'filter',
        name: 'Êï∞ÊçÆËøáÊª§',
        description: 'ËøáÊª§Êï∞ÁªÑÊï∞ÊçÆ',
        icon: 'fas fa-filter',
        color: '#fa8c16',
        inputs: [
          { id: 'input', name: 'ËæìÂÖ•Êï∞ÁªÑ', type: 'input', dataType: 'array' }
        ],
        outputs: [
          { id: 'output', name: 'ËøáÊª§ÁªìÊûú', type: 'output', dataType: 'array' }
        ],
        configSchema: [
          {
            key: 'filterCondition',
            label: 'ËøáÊª§Êù°‰ª∂',
            type: 'code',
            placeholder: '// item‰∏∫Êï∞ÁªÑ‰∏≠ÁöÑÊØè‰∏ÄÈ°π\nreturn item.age > 18;',
            default: 'return item !== null && item !== undefined;'
          }
        ],
        category: 'data'
      },
      {
        type: 'sort',
        name: 'Êï∞ÊçÆÊéíÂ∫è',
        description: 'ÂØπÊï∞ÁªÑËøõË°åÊéíÂ∫è',
        icon: 'fas fa-sort',
        color: '#1890ff',
        inputs: [
          { id: 'input', name: 'ËæìÂÖ•Êï∞ÁªÑ', type: 'input', dataType: 'array' }
        ],
        outputs: [
          { id: 'output', name: 'ÊéíÂ∫èÁªìÊûú', type: 'output', dataType: 'array' }
        ],
        configSchema: [
          {
            key: 'sortField',
            label: 'ÊéíÂ∫èÂ≠óÊÆµ',
            type: 'text',
            placeholder: 'ÂØπË±°Â±ûÊÄßÂêçÔºåÁïôÁ©∫ÂàôÁõ¥Êé•ÊéíÂ∫è',
            default: ''
          },
          {
            key: 'sortOrder',
            label: 'ÊéíÂ∫èÈ°∫Â∫è',
            type: 'select',
            options: [
              { label: 'ÂçáÂ∫è', value: 'asc' },
              { label: 'ÈôçÂ∫è', value: 'desc' }
            ],
            default: 'asc'
          }
        ],
        category: 'data'
      },
      {
        type: 'aggregate',
        name: 'Êï∞ÊçÆËÅöÂêà',
        description: 'ÂØπÊï∞ÊçÆËøõË°åËÅöÂêàËÆ°ÁÆó',
        icon: 'fas fa-calculator',
        color: '#eb2f96',
        inputs: [
          { id: 'input', name: 'ËæìÂÖ•Êï∞ÁªÑ', type: 'input', dataType: 'array' }
        ],
        outputs: [
          { id: 'output', name: 'ËÅöÂêàÁªìÊûú', type: 'output', dataType: 'any' }
        ],
        configSchema: [
          {
            key: 'operation',
            label: 'ËÅöÂêàÊìç‰Ωú',
            type: 'select',
            options: [
              { label: 'Ê±ÇÂíå', value: 'sum' },
              { label: 'Âπ≥ÂùáÂÄº', value: 'avg' },
              { label: 'ÊúÄÂ§ßÂÄº', value: 'max' },
              { label: 'ÊúÄÂ∞èÂÄº', value: 'min' },
              { label: 'ËÆ°Êï∞', value: 'count' }
            ],
            default: 'sum'
          },
          {
            key: 'field',
            label: 'ËÅöÂêàÂ≠óÊÆµ',
            type: 'text',
            placeholder: 'ÂØπË±°Â±ûÊÄßÂêçÔºåÁïôÁ©∫ÂàôÂØπÊï¥‰∏™ÂÄºËÅöÂêà',
            default: ''
          }
        ],
        category: 'data'
      }
    ]
  },
  {
    name: 'async',
    title: '‚ö° ÂºÇÊ≠•Êìç‰Ωú',
    nodes: [
      {
        type: 'http',
        name: 'HTTPËØ∑Ê±Ç',
        description: 'ÂèëÈÄÅHTTPËØ∑Ê±Ç',
        icon: 'fas fa-globe',
        color: '#722ed1',
        inputs: [
          { id: 'url', name: 'URL', type: 'input', dataType: 'string' },
          { id: 'data', name: 'Êï∞ÊçÆ', type: 'input', dataType: 'any' }
        ],
        outputs: [
          { id: 'success', name: 'ÊàêÂäü', type: 'output', dataType: 'any' },
          { id: 'error', name: 'ÈîôËØØ', type: 'output', dataType: 'any' }
        ],
        configSchema: [
          {
            key: 'method',
            label: 'ËØ∑Ê±ÇÊñπÊ≥ï',
            type: 'select',
            options: [
              { label: 'GET', value: 'GET' },
              { label: 'POST', value: 'POST' },
              { label: 'PUT', value: 'PUT' },
              { label: 'DELETE', value: 'DELETE' }
            ],
            default: 'GET'
          },
          {
            key: 'headers',
            label: 'ËØ∑Ê±ÇÂ§¥',
            type: 'textarea',
            placeholder: 'JSONÊ†ºÂºèÁöÑËØ∑Ê±ÇÂ§¥\n{"Content-Type": "application/json"}',
            default: '{"Content-Type": "application/json"}'
          },
          {
            key: 'timeout',
            label: 'Ë∂ÖÊó∂Êó∂Èó¥(ms)',
            type: 'number',
            min: 1000,
            max: 60000,
            default: 5000
          }
        ],
        category: 'async'
      },
      {
        type: 'delay',
        name: 'Âª∂Êó∂',
        description: 'Âª∂Êó∂ÊâßË°å',
        icon: 'fas fa-clock',
        color: '#fa541c',
        inputs: [
          { id: 'input', name: 'ËæìÂÖ•', type: 'input', dataType: 'any' }
        ],
        outputs: [
          { id: 'output', name: 'ËæìÂá∫', type: 'output', dataType: 'any' }
        ],
        configSchema: [
          {
            key: 'duration',
            label: 'Âª∂Êó∂Êó∂Èó¥(ms)',
            type: 'number',
            min: 0,
            max: 60000,
            default: 1000
          }
        ],
        category: 'async'
      },
      {
        type: 'parallel',
        name: 'Âπ∂Ë°åÊâßË°å',
        description: 'Âπ∂Ë°åÊâßË°åÂ§ö‰∏™ÂàÜÊîØ',
        icon: 'fas fa-tasks',
        color: '#13c2c2',
        inputs: [
          { id: 'input', name: 'ËæìÂÖ•', type: 'input', dataType: 'any' }
        ],
        outputs: [
          { id: 'branch1', name: 'ÂàÜÊîØ1', type: 'output', dataType: 'any' },
          { id: 'branch2', name: 'ÂàÜÊîØ2', type: 'output', dataType: 'any' },
          { id: 'branch3', name: 'ÂàÜÊîØ3', type: 'output', dataType: 'any' },
          { id: 'result', name: 'ÂêàÂπ∂ÁªìÊûú', type: 'output', dataType: 'array' }
        ],
        configSchema: [
          {
            key: 'waitAll',
            label: 'Á≠âÂæÖÊâÄÊúâÂàÜÊîØÂÆåÊàê',
            type: 'boolean',
            default: true
          },
          {
            key: 'timeout',
            label: 'Ë∂ÖÊó∂Êó∂Èó¥(ms)',
            type: 'number',
            min: 1000,
            max: 300000,
            default: 30000
          }
        ],
        category: 'async'
      }
    ]
  }
]
